@function top-shadow($depth) {
	$primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
	$blur: nth(1.5 3 10 14 19, $depth) * 4px;
	$color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));
	@return 0 $primary-offset $blur $color;
}

@function bottom-shadow($depth) {
	$primary-offset: nth(1 2 4 10 15, $depth) * 1px;
	$blur: nth(1 3 3 5 6, $depth) * 2px;
	$color: rgba(black, nth(.15 .23 .23 .22 .22, $depth));
	@return 0 $primary-offset $blur $color;
}

@function delay($duration) {
	@return nth(0.125 0.35 1, $duration) * 1s;
}

@function nth-or-null($list, $index) {
	@return if(length($list) >=$index, nth($list, $index), null);
}

@function context-calc($scale, $base) {
	@return ($scale/$base);
}

@function exponent($base, $exponent) {
	// reset value
	$value: $base;
	// positive intergers get multiplied
	@if $exponent > 1 {
		@for $i from 2 through $exponent {
			$value: $value * $base;
		}
	}
	// negitive intergers get divided. A number divided by itself is 1
	@if $exponent < 1 {
		@for $i from 0 through -$exponent {
			$value: $value / $base;
		}
	}
	// return the last value written
	@return $value;
}

@function measure-margin($scale, $measure, $value) {
	$pixelValue: $measure/$scale;
	$remValue: $pixelValue * $typo-font-base;
	@if $value==rem {
		@return $pixelValue+$value;
	}
	@else if $value==em {
		@return ($remValue/$scale)+$value;
	}
	@else {
		@return $remValue+$value;
	}
}

@function get-col-percent($column-num) {
	@return $column-num / $columns * 100%;
}

@function palette($palette, $tone: 'base', $palettes1: $palettes) {
	@return map-get(map-get($palettes1, $palette), $tone);
}

@function brightness($color) {
	@return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

// Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
@function set-text-color($color, $dark: #333333, $light: #FEFEFE) {
	@if $color == null {
		@return null;
	}
	@else {
		$color-brightness: brightness($color);
		$light-text-brightness: brightness($light);
		$dark-text-brightness: brightness($dark);

		@return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
	}
}
